% Generated by ADiMat 0.6.6-5530 (00419e1f)
% © 2001-2008 Andre Vehreschild <vehreschild@sc.rwth-aachen.de>
% © 2009-2018 Johannes Willkomm <johannes@johannes-willkomm.de>
% TU Darmstadt, 64289 Darmstadt, Germany
% Visit us on the web at http://www.adimat.de/
% Report bugs to johannes@johannes-willkomm.de
%
%                             DISCLAIMER
% 
% ADiMat was prepared as part of an employment at the Institute for Scientific Computing,
% RWTH Aachen University, Germany and at the Institute for Scientific Computing,
% TU Darmstadt, Germany and is provided AS IS. 
% NEITHER THE AUTHOR(S), THE GOVERNMENT OF THE FEDERAL REPUBLIC OF GERMANY
% NOR ANY AGENCY THEREOF, NOR THE RWTH AACHEN UNIVERSITY, NOT THE TU DARMSTADT,
% INCLUDING ANY OF THEIR EMPLOYEES OR OFFICERS, MAKES ANY WARRANTY, EXPRESS OR IMPLIED,
% OR ASSUMES ANY LEGAL LIABILITY OR RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS,
% OR USEFULNESS OF ANY INFORMATION OR PROCESS DISCLOSED, OR REPRESENTS THAT ITS USE
% WOULD NOT INFRINGE PRIVATELY OWNED RIGHTS.
%
% Parameters:
%  - dependents=r
%  - independents=x
%  - inputEncoding=ISO-8859-1
%
% Functions in this file: a_myFun, rec_myFun,
%  ret_myFun
%

function [a_x nr_r] = a_myFun(x, a_r)
   r = x * x';
   nr_r = r;
   a_x = a_zeros1(x);
   if nargin < 2
      a_r = a_zeros1(r);
   end
   a_x = adimat_adjsum(a_x, adimat_adjmultl(x, a_r, x'));
   a_x = adimat_adjsum(a_x, a_ctranspose(adimat_adjmultr(x', x, a_r), x));
end

function r = rec_myFun(x)
   r = x * x';
   adimat_push(r, x);
end

function a_x = ret_myFun(a_r)
   [x r] = adimat_pop;
   a_x = a_zeros1(x);
   if nargin < 1
      a_r = a_zeros1(r);
   end
   a_x = adimat_adjsum(a_x, adimat_adjmultl(x, a_r, x'));
   a_x = adimat_adjsum(a_x, a_ctranspose(adimat_adjmultr(x', x, a_r), x));
end
