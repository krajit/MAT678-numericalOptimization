% Generated by ADiMat 0.6.6-5530 (00419e1f)
% © 2001-2008 Andre Vehreschild <vehreschild@sc.rwth-aachen.de>
% © 2009-2018 Johannes Willkomm <johannes@johannes-willkomm.de>
% TU Darmstadt, 64289 Darmstadt, Germany
% Visit us on the web at http://www.adimat.de/
% Report bugs to johannes@johannes-willkomm.de
%
%                             DISCLAIMER
% 
% ADiMat was prepared as part of an employment at the Institute for Scientific Computing,
% RWTH Aachen University, Germany and at the Institute for Scientific Computing,
% TU Darmstadt, Germany and is provided AS IS. 
% NEITHER THE AUTHOR(S), THE GOVERNMENT OF THE FEDERAL REPUBLIC OF GERMANY
% NOR ANY AGENCY THEREOF, NOR THE RWTH AACHEN UNIVERSITY, NOT THE TU DARMSTADT,
% INCLUDING ANY OF THEIR EMPLOYEES OR OFFICERS, MAKES ANY WARRANTY, EXPRESS OR IMPLIED,
% OR ASSUMES ANY LEGAL LIABILITY OR RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS,
% OR USEFULNESS OF ANY INFORMATION OR PROCESS DISCLOSED, OR REPRESENTS THAT ITS USE
% WOULD NOT INFRINGE PRIVATELY OWNED RIGHTS.
%
% Parameters:
%  - dependents=out
%  - independents=U
%  - inputEncoding=ISO-8859-1
%
% Functions in this file: a_laplaceEqn, rec_laplaceEqn,
%  ret_laplaceEqn
%

function [a_U nr_out] = a_laplaceEqn(U, a_out)
   nx = size(U, 1);
   ny = size(U, 2);
   dx = 1 / (nx - 1);
   dy = 1 / (ny - 1);
   x = 0:dx:1;
   y = 0:dy:1;
   u = zeros(nx, ny);
   e = zeros(nx, ny);
   Ex = sparse(2 : nx, 1 : nx - 1, 1, nx, nx);
   Cx = sparse(1 : 1, 2 : 2, 1, nx, nx);
   Dx = sparse(nx : nx, nx - 1 : nx - 1, 1, nx, nx);
   Ax = Ex + Ex' - 2*speye(nx) + Cx + Dx;
   Ey = sparse(2 : ny, 1 : ny - 1, 1, ny, ny);
   Ay = Ey + Ey' - 2*speye(ny) + Cx + Dx;
   Bx = -1 * speye(nx);
   A = -kron(Ay / dy^2, speye(nx)) - kron(speye(ny), Ax / dx^2) - kron(Bx, speye(nx));
   f = @(x, y) 1 - min(1, max(0, 12.*((x - 0.5).*(x - 0.5) + (y - 0.5).*(y - 0.5)) - 1.0/3));
   tmpda1 = x';
   S = f(tmpda1, y) + U;
   tmpca1 = S;
   adimat_push1(S);
   S = reshape(tmpca1, [], 1);
   adimat_push1(tmpca1);
   tmpca1 = S;
   adimat_push1(S);
   S = A \ tmpca1;
   adimat_push1(tmpca1);
   tmpca1 = S;
   adimat_push1(S);
   S = reshape(tmpca1, nx, ny);
   tmpda2 = 1 : ny;
   adimat_push1(tmpda1);
   tmpda1 = 1 : nx;
   adimat_push_index2(u, tmpda1, tmpda2);
   u(tmpda1, tmpda2) = S;
   M = @(x, y) -142.0/3 + 12.*((x - 0.5).*(x - 0.5) + (y - 0.5).*(y - 0.5));
   yd = M(x', y);
   adimat_push_index2(e, 1, ':');
   e(1, :) = -12;
   adimat_push_index2(e, nx, ':');
   e(nx, :) = -12;
   adimat_push_index2(e, ':', 1);
   e(:, 1) = -12;
   adimat_push_index2(e, ':', ny);
   e(:, ny) = -12;
   tmpca15 = U .^ 2;
   tmpca14 = sum(tmpca15);
   tmpca13 = 0.5 * tmpca14;
   tmpca12 = tmpca13 * dx;
   tmpca11 = tmpca12 * dy;
   tmpca10 = e .* u;
   tmpca9 = tmpca10 * dx;
   tmpca8 = sum(tmpca9);
   tmpca7 = u - yd;
   tmpca6 = tmpca7 .^ 2;
   tmpca5 = 0.5 * tmpca6;
   tmpca4 = tmpca5 * dx;
   tmpca3 = tmpca4 * dy;
   tmpca2 = sum(tmpca3);
   adimat_push1(tmpca1);
   tmpca1 = tmpca2 + tmpca8 + tmpca11;
   out = sum(tmpca1);
   nr_out = out;
   [a_u a_S a_tmpca1 a_tmpca10 a_tmpca11 a_tmpca12 a_tmpca13 a_tmpca14 a_tmpca15 a_tmpca2 a_tmpca3 a_tmpca4 a_tmpca5 a_tmpca6 a_tmpca7 a_tmpca8 a_tmpca9 a_U] = a_zeros(u, S, tmpca1, tmpca10, tmpca11, tmpca12, tmpca13, tmpca14, tmpca15, tmpca2, tmpca3, tmpca4, tmpca5, tmpca6, tmpca7, tmpca8, tmpca9, U);
   if nargin < 2
      a_out = a_zeros1(out);
   end
   a_tmpca1 = adimat_adjsum(a_tmpca1, a_sum(a_out, tmpca1));
   tmpca1 = adimat_pop1;
   a_tmpca2 = adimat_adjsum(a_tmpca2, adimat_adjred(tmpca2, a_tmpca1));
   a_tmpca8 = adimat_adjsum(a_tmpca8, adimat_adjred(tmpca8, a_tmpca1));
   a_tmpca11 = adimat_adjsum(a_tmpca11, adimat_adjred(tmpca11, a_tmpca1));
   a_tmpca1 = a_zeros1(tmpca1);
   a_tmpca3 = adimat_adjsum(a_tmpca3, a_sum(a_tmpca2, tmpca3));
   a_tmpca4 = adimat_adjsum(a_tmpca4, adimat_adjmultl(tmpca4, a_tmpca3, dy));
   a_tmpca5 = adimat_adjsum(a_tmpca5, adimat_adjmultl(tmpca5, a_tmpca4, dx));
   a_tmpca6 = adimat_adjsum(a_tmpca6, adimat_adjmultr(tmpca6, 0.5, a_tmpca5));
   a_tmpca7 = adimat_adjsum(a_tmpca7, adimat_adjred(tmpca7, 2 .* tmpca7.^1 .* a_tmpca6));
   a_u = adimat_adjsum(a_u, adimat_adjred(u, a_tmpca7));
   a_tmpca9 = adimat_adjsum(a_tmpca9, a_sum(a_tmpca8, tmpca9));
   a_tmpca10 = adimat_adjsum(a_tmpca10, adimat_adjmultl(tmpca10, a_tmpca9, dx));
   a_u = adimat_adjsum(a_u, adimat_adjred(u, e .* a_tmpca10));
   a_tmpca12 = adimat_adjsum(a_tmpca12, adimat_adjmultl(tmpca12, a_tmpca11, dy));
   a_tmpca13 = adimat_adjsum(a_tmpca13, adimat_adjmultl(tmpca13, a_tmpca12, dx));
   a_tmpca14 = adimat_adjsum(a_tmpca14, adimat_adjmultr(tmpca14, 0.5, a_tmpca13));
   a_tmpca15 = adimat_adjsum(a_tmpca15, a_sum(a_tmpca14, tmpca15));
   a_U = adimat_adjsum(a_U, adimat_adjred(U, 2 .* U.^1 .* a_tmpca15));
   e = adimat_pop_index2(e, ':', ny);
   e = adimat_pop_index2(e, ':', 1);
   e = adimat_pop_index2(e, nx, ':');
   e = adimat_pop_index2(e, 1, ':');
   u = adimat_pop_index2(u, tmpda1, tmpda2);
   a_S = adimat_adjsum(a_S, adimat_adjsubsasgn(a_u, S, tmpda1, tmpda2));
   a_u = a_zeros_index2(a_u, u, tmpda1, tmpda2);
   [tmpda1 S] = adimat_pop;
   a_tmpca1 = adimat_adjsum(a_tmpca1, reshape(a_S, size(tmpca1)));
   a_S = a_zeros1(S);
   tmpca1 = adimat_pop1;
   a_S = adimat_adjsum(a_S, a_tmpca1);
   a_tmpca1 = a_zeros1(tmpca1);
   [tmpadjc2] = adimat_a_mldivider(A, tmpca1, a_S);
   S = adimat_pop1;
   a_tmpca1 = adimat_adjsum(a_tmpca1, tmpadjc2);
   a_S = a_zeros1(S);
   tmpca1 = adimat_pop1;
   a_S = adimat_adjsum(a_S, a_tmpca1);
   a_tmpca1 = a_zeros1(tmpca1);
   S = adimat_pop1;
   a_tmpca1 = adimat_adjsum(a_tmpca1, reshape(a_S, size(tmpca1)));
   a_S = a_zeros1(S);
   a_S = adimat_adjsum(a_S, a_tmpca1);
   a_U = adimat_adjsum(a_U, adimat_adjred(U, a_S));
end

function out = rec_laplaceEqn(U)
   nx = size(U, 1);
   ny = size(U, 2);
   dx = 1 / (nx - 1);
   dy = 1 / (ny - 1);
   x = 0:dx:1;
   y = 0:dy:1;
   u = zeros(nx, ny);
   e = zeros(nx, ny);
   Ex = sparse(2 : nx, 1 : nx - 1, 1, nx, nx);
   Cx = sparse(1 : 1, 2 : 2, 1, nx, nx);
   Dx = sparse(nx : nx, nx - 1 : nx - 1, 1, nx, nx);
   Ax = Ex + Ex' - 2*speye(nx) + Cx + Dx;
   Ey = sparse(2 : ny, 1 : ny - 1, 1, ny, ny);
   Ay = Ey + Ey' - 2*speye(ny) + Cx + Dx;
   Bx = -1 * speye(nx);
   A = -kron(Ay / dy^2, speye(nx)) - kron(speye(ny), Ax / dx^2) - kron(Bx, speye(nx));
   f = @(x, y) 1 - min(1, max(0, 12.*((x - 0.5).*(x - 0.5) + (y - 0.5).*(y - 0.5)) - 1.0/3));
   tmpda1 = x';
   S = f(tmpda1, y) + U;
   tmpca1 = S;
   adimat_push1(S);
   S = reshape(tmpca1, [], 1);
   adimat_push1(tmpca1);
   tmpca1 = S;
   adimat_push1(S);
   S = A \ tmpca1;
   adimat_push1(tmpca1);
   tmpca1 = S;
   adimat_push1(S);
   S = reshape(tmpca1, nx, ny);
   tmpda2 = 1 : ny;
   adimat_push1(tmpda1);
   tmpda1 = 1 : nx;
   adimat_push_index2(u, tmpda1, tmpda2);
   u(tmpda1, tmpda2) = S;
   M = @(x, y) -142.0/3 + 12.*((x - 0.5).*(x - 0.5) + (y - 0.5).*(y - 0.5));
   yd = M(x', y);
   adimat_push_index2(e, 1, ':');
   e(1, :) = -12;
   adimat_push_index2(e, nx, ':');
   e(nx, :) = -12;
   adimat_push_index2(e, ':', 1);
   e(:, 1) = -12;
   adimat_push_index2(e, ':', ny);
   e(:, ny) = -12;
   tmpca15 = U .^ 2;
   tmpca14 = sum(tmpca15);
   tmpca13 = 0.5 * tmpca14;
   tmpca12 = tmpca13 * dx;
   tmpca11 = tmpca12 * dy;
   tmpca10 = e .* u;
   tmpca9 = tmpca10 * dx;
   tmpca8 = sum(tmpca9);
   tmpca7 = u - yd;
   tmpca6 = tmpca7 .^ 2;
   tmpca5 = 0.5 * tmpca6;
   tmpca4 = tmpca5 * dx;
   tmpca3 = tmpca4 * dy;
   tmpca2 = sum(tmpca3);
   adimat_push1(tmpca1);
   tmpca1 = tmpca2 + tmpca8 + tmpca11;
   out = sum(tmpca1);
   adimat_push(nx, ny, dx, dy, x, y, u, e, Ex, Cx, Dx, Ax, Ey, Ay, Bx, A, f, S, M, yd, tmpca1, tmpca10, tmpca11, tmpca12, tmpca13, tmpca14, tmpca15, tmpca2, tmpca3, tmpca4, tmpca5, tmpca6, tmpca7, tmpca8, tmpca9, tmpda1, tmpda2, out, U);
end

function a_U = ret_laplaceEqn(a_out)
   [U out tmpda2 tmpda1 tmpca9 tmpca8 tmpca7 tmpca6 tmpca5 tmpca4 tmpca3 tmpca2 tmpca15 tmpca14 tmpca13 tmpca12 tmpca11 tmpca10 tmpca1 yd M S f A Bx Ay Ey Ax Dx Cx Ex e u y x dy dx ny nx] = adimat_pop;
   [a_u a_S a_tmpca1 a_tmpca10 a_tmpca11 a_tmpca12 a_tmpca13 a_tmpca14 a_tmpca15 a_tmpca2 a_tmpca3 a_tmpca4 a_tmpca5 a_tmpca6 a_tmpca7 a_tmpca8 a_tmpca9 a_U] = a_zeros(u, S, tmpca1, tmpca10, tmpca11, tmpca12, tmpca13, tmpca14, tmpca15, tmpca2, tmpca3, tmpca4, tmpca5, tmpca6, tmpca7, tmpca8, tmpca9, U);
   if nargin < 1
      a_out = a_zeros1(out);
   end
   a_tmpca1 = adimat_adjsum(a_tmpca1, a_sum(a_out, tmpca1));
   tmpca1 = adimat_pop1;
   a_tmpca2 = adimat_adjsum(a_tmpca2, adimat_adjred(tmpca2, a_tmpca1));
   a_tmpca8 = adimat_adjsum(a_tmpca8, adimat_adjred(tmpca8, a_tmpca1));
   a_tmpca11 = adimat_adjsum(a_tmpca11, adimat_adjred(tmpca11, a_tmpca1));
   a_tmpca1 = a_zeros1(tmpca1);
   a_tmpca3 = adimat_adjsum(a_tmpca3, a_sum(a_tmpca2, tmpca3));
   a_tmpca4 = adimat_adjsum(a_tmpca4, adimat_adjmultl(tmpca4, a_tmpca3, dy));
   a_tmpca5 = adimat_adjsum(a_tmpca5, adimat_adjmultl(tmpca5, a_tmpca4, dx));
   a_tmpca6 = adimat_adjsum(a_tmpca6, adimat_adjmultr(tmpca6, 0.5, a_tmpca5));
   a_tmpca7 = adimat_adjsum(a_tmpca7, adimat_adjred(tmpca7, 2 .* tmpca7.^1 .* a_tmpca6));
   a_u = adimat_adjsum(a_u, adimat_adjred(u, a_tmpca7));
   a_tmpca9 = adimat_adjsum(a_tmpca9, a_sum(a_tmpca8, tmpca9));
   a_tmpca10 = adimat_adjsum(a_tmpca10, adimat_adjmultl(tmpca10, a_tmpca9, dx));
   a_u = adimat_adjsum(a_u, adimat_adjred(u, e .* a_tmpca10));
   a_tmpca12 = adimat_adjsum(a_tmpca12, adimat_adjmultl(tmpca12, a_tmpca11, dy));
   a_tmpca13 = adimat_adjsum(a_tmpca13, adimat_adjmultl(tmpca13, a_tmpca12, dx));
   a_tmpca14 = adimat_adjsum(a_tmpca14, adimat_adjmultr(tmpca14, 0.5, a_tmpca13));
   a_tmpca15 = adimat_adjsum(a_tmpca15, a_sum(a_tmpca14, tmpca15));
   a_U = adimat_adjsum(a_U, adimat_adjred(U, 2 .* U.^1 .* a_tmpca15));
   e = adimat_pop_index2(e, ':', ny);
   e = adimat_pop_index2(e, ':', 1);
   e = adimat_pop_index2(e, nx, ':');
   e = adimat_pop_index2(e, 1, ':');
   u = adimat_pop_index2(u, tmpda1, tmpda2);
   a_S = adimat_adjsum(a_S, adimat_adjsubsasgn(a_u, S, tmpda1, tmpda2));
   a_u = a_zeros_index2(a_u, u, tmpda1, tmpda2);
   [tmpda1 S] = adimat_pop;
   a_tmpca1 = adimat_adjsum(a_tmpca1, reshape(a_S, size(tmpca1)));
   a_S = a_zeros1(S);
   tmpca1 = adimat_pop1;
   a_S = adimat_adjsum(a_S, a_tmpca1);
   a_tmpca1 = a_zeros1(tmpca1);
   [tmpadjc2] = adimat_a_mldivider(A, tmpca1, a_S);
   S = adimat_pop1;
   a_tmpca1 = adimat_adjsum(a_tmpca1, tmpadjc2);
   a_S = a_zeros1(S);
   tmpca1 = adimat_pop1;
   a_S = adimat_adjsum(a_S, a_tmpca1);
   a_tmpca1 = a_zeros1(tmpca1);
   S = adimat_pop1;
   a_tmpca1 = adimat_adjsum(a_tmpca1, reshape(a_S, size(tmpca1)));
   a_S = a_zeros1(S);
   a_S = adimat_adjsum(a_S, a_tmpca1);
   a_U = adimat_adjsum(a_U, adimat_adjred(U, a_S));
end
